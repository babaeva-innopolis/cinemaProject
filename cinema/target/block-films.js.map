{"version":3,"sources":["../js/block-films.js"],"names":["API_TOKEN","blockFilmsWrapper","document","getElementById","innerHTML","renderFilmBlock","title","posterUrl","id","link","createElement","href","wrapper","classList","add","posterWrapper","poster","src","alt","append","shadow","descriptionWrapper","name","textContent","description","getBlockFilmsData","getTopFilms","answer","json","data","requests","filmsLayout","Map","films","forEach","film","i","nameRu","posterUrlPreview","filmId","filmBlock","set","push","Promise","resolve","reject","setTimeout","getFilmDetails","filmData","all","filmLayout","console","error"],"mappings":"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","sourcesContent":["const API_TOKEN = '5499449d-65c4-452f-b6e6-0f0ab98493a5';\r\n\r\nconst blockFilmsWrapper = document.getElementById('block-films-wrapper');\r\nblockFilmsWrapper.innerHTML = '';\r\n\r\n\r\n\r\nconst renderFilmBlock = (title, posterUrl, id) => {\r\n    const link = document.createElement('a');\r\n    link.href = `/single/?id=${id}`;\r\n\r\n    const wrapper = document.createElement('div');\r\n    wrapper.classList.add('block05__movie1');\r\n    \r\n    const posterWrapper = document.createElement('div');\r\n    posterWrapper.classList.add('block05__bg');\r\n    const poster = document.createElement('img');\r\n    poster.src =  posterUrl; \r\n    poster.alt = 'постер к фильму';\r\n\r\n    posterWrapper.append(poster);\r\n    const shadow = document.createElement('div');\r\n    shadow.classList.add('block05__shadow');\r\n\r\n    const descriptionWrapper = document.createElement('div');\r\n    descriptionWrapper.classList.add('block05__descr');\r\n    const name = document.createElement('div');\r\n    name.classList.add('block05__text2');\r\n    name.textContent = title; \r\n\r\n    const description = document.createElement('div');\r\n    description.classList.add('block05__text3');\r\n    description.textContent = 'Loading...';\r\n    wrapper.description = description;\r\n\r\n    descriptionWrapper.append(name, description);\r\n    \r\n    wrapper.append(link);\r\n    link.append(posterWrapper, shadow, descriptionWrapper);\r\n\r\n    return [wrapper, description];\r\n\r\n}\r\n\r\nconst getBlockFilmsData = async () => {\r\n    try{\r\n        const answer = await getTopFilms();\r\n        const data = await answer.json();\r\n\r\n        const requests = [];\r\n        const filmsLayout = new Map();\r\n\r\n        data.films.forEach(async (film, i) => {\r\n            const [filmBlock, description] = renderFilmBlock(film.nameRu, film.posterUrlPreview, film.filmId);\r\n            filmsLayout.set(film.filmId, filmBlock);\r\n            requests.push(new Promise((resolve, reject) =>{\r\n                setTimeout(async () => { \r\n                    try{\r\n                        const answer = await getFilmDetails(film.filmId);\r\n                        const filmData = await answer.json();\r\n                        \r\n                        description.textContent = filmData.description;\r\n            \r\n                        if (!filmData.description) {\r\n                            filmsLayout.delete(film.filmId);\r\n                            \r\n                        }\r\n                    } catch (error){\r\n                       \r\n                      }  \r\n    \r\n                        resolve();\r\n                }, i * 300);\r\n                \r\n                \r\n            }))\r\n\r\n        });\r\n        await Promise.all(requests);\r\n       let i = 0;\r\n        for ( const [id, filmLayout] of filmsLayout){\r\n            blockFilmsWrapper.append(filmLayout);\r\n\r\n            i++;\r\n            if (i ===9){\r\n                break;\r\n            }\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        }\r\n    \r\n}\r\n\r\ngetBlockFilmsData();"],"file":"block-films.js"}